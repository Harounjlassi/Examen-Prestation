// <auto-generated />
using System;
using App.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace App.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250513003552_base")]
    partial class @base
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("App.ApplicationCore.Domain.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("App.ApplicationCore.Domain.Prestataire", b =>
                {
                    b.Property<int>("PrestataireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrestataireId"));

                    b.Property<int>("Appreciation")
                        .HasColumnType("int");

                    b.Property<string>("PrestataireNom")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PrestatairePhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrestataireTel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpecialiteFK")
                        .HasColumnType("int");

                    b.Property<double>("TarifHoraire")
                        .HasColumnType("float");

                    b.HasKey("PrestataireId");

                    b.HasIndex("SpecialiteFK");

                    b.ToTable("Prestataire");
                });

            modelBuilder.Entity("App.ApplicationCore.Domain.Prestation", b =>
                {
                    b.Property<int>("PrestataireFK")
                        .HasColumnType("int");

                    b.Property<int>("ClientFK")
                        .HasColumnType("int");

                    b.Property<DateTime>("HeureDebut")
                        .HasColumnType("datetime2");

                    b.Property<int>("NbHeures")
                        .HasColumnType("int");

                    b.HasKey("PrestataireFK", "ClientFK", "HeureDebut");

                    b.HasIndex("ClientFK");

                    b.ToTable("Prestation");
                });

            modelBuilder.Entity("App.ApplicationCore.Domain.Specialite", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Intitule")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.ToTable("Specialite");
                });

            modelBuilder.Entity("App.ApplicationCore.Domain.Prestataire", b =>
                {
                    b.HasOne("App.ApplicationCore.Domain.Specialite", "specialite")
                        .WithMany("prestataires")
                        .HasForeignKey("SpecialiteFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("specialite");
                });

            modelBuilder.Entity("App.ApplicationCore.Domain.Prestation", b =>
                {
                    b.HasOne("App.ApplicationCore.Domain.Client", "client")
                        .WithMany("prestations")
                        .HasForeignKey("ClientFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.ApplicationCore.Domain.Prestataire", "prestataire")
                        .WithMany("prestations")
                        .HasForeignKey("PrestataireFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("client");

                    b.Navigation("prestataire");
                });

            modelBuilder.Entity("App.ApplicationCore.Domain.Client", b =>
                {
                    b.Navigation("prestations");
                });

            modelBuilder.Entity("App.ApplicationCore.Domain.Prestataire", b =>
                {
                    b.Navigation("prestations");
                });

            modelBuilder.Entity("App.ApplicationCore.Domain.Specialite", b =>
                {
                    b.Navigation("prestataires");
                });
#pragma warning restore 612, 618
        }
    }
}
